[package]
name = "ruinsofatlantis"
version = "0.1.0"
edition = "2024"
default-run = "ruinsofatlantis"

[workspace]
members = [
    ".",                # root crate
    "shared/assets",    # shared library for model/assets
    "tools/model-viewer", # standalone model viewer
    "xtask",             # workspace automation
    "tools/zone-bake",
    "tools/gltf-decompress",
    "tools/image-probe",
    "tools/bevy-probe",
    "tools/sim-harness",
    "crates/data_runtime", # data schemas + loaders
    "crates/render_wgpu",    # renderer crate
    "crates/sim_core",       # sim rules/combat engine
    "crates/platform_winit", # winit platform loop
    "crates/ux_hud"          # HUD logic
    ,"crates/collision_static"
, "crates/client_runtime", "crates/core_units", "crates/core_materials", "crates/voxel_proxy", "crates/voxel_mesh", "crates/net_core", "crates/client_core"]
resolver = "2"

[features]
default = ["gfx-sky"]
gfx-sky = []

[dependencies]
env_logger = "0.11.8"
log = "0.4.28"
render_wgpu = { version = "0.1.0", path = "crates/render_wgpu" }
platform_winit = { version = "0.1.0", path = "crates/platform_winit" }
ecs_core = { version = "0.1.0", path = "crates/ecs_core" }
client_core = { version = "0.1.0", path = "crates/client_core" }
server_core = { version = "0.1.0", path = "crates/server_core" }
sim_core = { version = "0.1.0", path = "crates/sim_core" }

[patch.crates-io]
# Use a patched local copy of draco_decoder to avoid passing
# macOS-only flags on non-macOS targets.
draco_decoder = { path = "vendor/draco_decoder-0.0.10" }

[dev-dependencies]
data_runtime = { path = "crates/data_runtime" }
glam = "0.30.8"
serde_json = "1.0.145"
sha2 = "0.10.9"

[target.wasm32-unknown-unknown.dependencies]
console_error_panic_hook = "0.1.7"
console_log = "0.2"
getrandom = { version = "0.3", features = ["wasm_js"] }
wasm-bindgen = "0.2"
wasm-bindgen-futures = "0.4"
